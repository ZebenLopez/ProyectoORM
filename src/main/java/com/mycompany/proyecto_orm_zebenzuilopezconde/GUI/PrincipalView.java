/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto_orm_zebenzuilopezconde.GUI;

import com.mycompany.proyecto_orm_zebenzuilopezconde.entities.Avion;
import com.mycompany.proyecto_orm_zebenzuilopezconde.entities.Miembro;
import com.mycompany.proyecto_orm_zebenzuilopezconde.entities.Piloto;
import com.mycompany.proyecto_orm_zebenzuilopezconde.entities.Vuelo;
import com.mycompany.proyecto_orm_zebenzuilopezconde.services.*;

import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 * @author Zeben
 */
public class PrincipalView extends javax.swing.JFrame {
    HibernateUtil hUtil = new HibernateUtil();
    AvionDAO avionDao = new AvionDAO(hUtil.getSessionFactory());
    MiembroDAO miembroDao = new MiembroDAO(hUtil.getSessionFactory());
    PilotoDAO pilotoDao = new PilotoDAO(hUtil.getSessionFactory());
    VueloDAO vueloDao = new VueloDAO(hUtil.getSessionFactory());


    /**
     * Creates new form PrincipalView
     */
    public PrincipalView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablita = new javax.swing.JTable();
        comboBox = new javax.swing.JComboBox<>();
        Buscar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        menuPiloto = new javax.swing.JMenuItem();
        menuMiembro = new javax.swing.JMenuItem();
        menuAvion = new javax.swing.JMenuItem();
        menuVuelo = new javax.swing.JMenuItem();
        borrarPiloto = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        borrarMiembro = new javax.swing.JMenuItem();
        borrarAvion = new javax.swing.JMenuItem();
        borrarVuelo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablita);

        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilotos", "Miembros", "Aviones", "Vuelos" }));
;

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        jMenu2.setText("Insertar");

        menuPiloto.setText("Piloto");
        menuPiloto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPilotoActionPerformed(evt);
            }
        });
        jMenu2.add(menuPiloto);

        menuMiembro.setText("Miembro");
        menuMiembro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMiembroActionPerformed(evt);
            }
        });
        jMenu2.add(menuMiembro);

        menuAvion.setText("Avión");
        menuAvion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAvionActionPerformed(evt);
            }
        });
        jMenu2.add(menuAvion);

        menuVuelo.setText("Vuelo");
        menuVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuVueloActionPerformed(evt);
            }
        });
        jMenu2.add(menuVuelo);

        jMenuBar1.add(jMenu2);

        borrarPiloto.setText("Borrar");

        jMenuItem1.setText("Piloto");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        borrarPiloto.add(jMenuItem1);

        borrarMiembro.setText("Miembro");
        borrarMiembro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarMiembroActionPerformed(evt);
            }
        });
        borrarPiloto.add(borrarMiembro);

        borrarAvion.setText("Avión");
        borrarAvion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarAvionActionPerformed(evt);
            }
        });
        borrarPiloto.add(borrarAvion);

        borrarVuelo.setText("Vuelo");
        borrarVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarVueloActionPerformed(evt);
            }
        });
        borrarPiloto.add(borrarVuelo);

        jMenuBar1.add(borrarPiloto);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(Buscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buscar))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuPilotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPilotoActionPerformed
        // TODO add your handling code here:
        InsertarPilotosView insertarPilotoView = new InsertarPilotosView();
        insertarPilotoView.setVisible(true);
    }//GEN-LAST:event_menuPilotoActionPerformed

    private void menuMiembroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMiembroActionPerformed
        // TODO add your handling code here:
        InsertarMiembrosView insertarMiembroView = new InsertarMiembrosView();
        insertarMiembroView.setVisible(true);
    }//GEN-LAST:event_menuMiembroActionPerformed

    private void menuAvionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAvionActionPerformed
        // TODO add your handling code here:
        InsertarAvionView insertarAvionView = new InsertarAvionView();
        insertarAvionView.setVisible(true);
    }//GEN-LAST:event_menuAvionActionPerformed

    private void menuVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuVueloActionPerformed
        // TODO add your handling code here:
        InsertarVueloView insertarVueloView = new InsertarVueloView();
        insertarVueloView.setVisible(true);
    }//GEN-LAST:event_menuVueloActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
        String seleccion = comboBox.getSelectedItem().toString();
        switch (seleccion) {
            case "Pilotos":
                llenarTablaConPilotos();
                break;
            case "Aviones":
                llenarTablaConAviones();
                break;
            case "Miembros":
                llenarTablaConMiembros();
                break;
            case "Vuelos":
                llenarTablaConVuelos();
                break;
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        BorrarPiloto borrarPiloto = new BorrarPiloto();
        borrarPiloto.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void borrarMiembroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarMiembroActionPerformed
        // TODO add your handling code here:
        BorrarMiembro borrarMiembro = new BorrarMiembro();
        borrarMiembro.setVisible(true);
    }//GEN-LAST:event_borrarMiembroActionPerformed

    private void borrarAvionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarAvionActionPerformed
        // TODO add your handling code here:
        BorrarAvion borrarAvion = new BorrarAvion();
        borrarAvion.setVisible(true);
    }//GEN-LAST:event_borrarAvionActionPerformed

    private void borrarVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarVueloActionPerformed
        // TODO add your handling code here:
        BorrarVuelo borrarVuelo = new BorrarVuelo();
        borrarVuelo.setVisible(true);
    }//GEN-LAST:event_borrarVueloActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JMenuItem borrarAvion;
    private javax.swing.JMenuItem borrarMiembro;
    private javax.swing.JMenu borrarPiloto;
    private javax.swing.JMenuItem borrarVuelo;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menuAvion;
    private javax.swing.JMenuItem menuMiembro;
    private javax.swing.JMenuItem menuPiloto;
    private javax.swing.JMenuItem menuVuelo;
    private javax.swing.JTable tablita;
    // End of variables declaration//GEN-END:variables
    private void llenarTablaConPilotos() {
        // Obtén los datos de los pilotos
        List<Piloto> pilotos = pilotoDao.verTodosLosPilotos();

        // Define las columnas para los pilotos
        String[] columnas = {"ID", "Nombre", "Horas de Vuelo"};

        // Crea un nuevo modelo de tabla
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        // Llena la tabla con los datos
        for (Piloto piloto : pilotos) {
            Object[] fila = new Object[3];
            fila[0] = piloto.getId_piloto();
            fila[1] = piloto.getNombre();
            fila[2] = piloto.getHorasDeVuelo();
            modelo.addRow(fila);
        }

        // Asigna el nuevo modelo a la tabla
        tablita.setModel(modelo);
    }

    private void llenarTablaConAviones() {
        // Obtén los datos de los aviones
        List<Avion> aviones = avionDao.verTodosLosAviones();

        // Define las columnas para los aviones
        String[] columnas = {"ID", "Codigo"};

        // Crea un nuevo modelo de tabla
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        // Llena la tabla con los datos
        for (Avion avion : aviones) {
            Object[] fila = new Object[3];
            fila[0] = avion.getId_avion();
            fila[1] = avion.getCodigo();
            modelo.addRow(fila);
        }

        // Asigna el nuevo modelo a la tabla
        tablita.setModel(modelo);
    }

    private void llenarTablaConMiembros() {
        // Obtén los datos de los miembros
        List<Miembro> miembros = miembroDao.verTodosLosMiembros();

        // Define las columnas para los miembros
        String[] columnas = {"ID", "Codigo", "Nombre"};

        // Crea un nuevo modelo de tabla
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        // Llena la tabla con los datos
        for (Miembro miembro : miembros) {
            Object[] fila = new Object[3];
            fila[0] = miembro.getId_miembro();
            fila[1] = miembro.getCodigo();
            fila[2] = miembro.getNombre();
            modelo.addRow(fila);
        }

        // Asigna el nuevo modelo a la tabla
        tablita.setModel(modelo);
    }

    private void llenarTablaConVuelos() {
        // Obtén los datos de los vuelos
        List<Vuelo> vuelos = vueloDao.verTodosLosVuelos();

        // Define las columnas para los vuelos
        String[] columnas = {"ID", "Origen", "Destino", "Número de Vuelo", "Fecha", "Hora de Salida", "ID Avión", "ID Miembro", "ID Piloto"};

        // Crea un nuevo modelo de tabla
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);

        // Llena la tabla con los datos
        for (Vuelo vuelo : vuelos) {
            Object[] fila = new Object[9];
            fila[0] = vuelo.getId_vuelo();
            fila[1] = vuelo.getOrigen();
            fila[2] = vuelo.getDestino();
            fila[3] = vuelo.getNumeroDeVuelo();
            fila[4] = vuelo.getFechaVuelo();
            fila[5] = vuelo.getHoraSalida();
            fila[6] = vuelo.getAvion() != null ? vuelo.getAvion().getId_avion() : null; // Null check added here
            fila[7] = vuelo.getMiembro() != null ? vuelo.getMiembro().getId_miembro() : null; // Null check added here
            fila[8] = vuelo.getPiloto() != null ? vuelo.getPiloto().getId_piloto() : null; // Null check added here
            modelo.addRow(fila);
        }

        // Asigna el nuevo modelo a la tabla
        tablita.setModel(modelo);
    }
}
